Area of Triangle

#include <iostream>
using namespace std;
int main()
{
int height, base;
float ans;/ans may come in fractions/

cout<<"Enter height and base";
cin>>height>>base;
ans= (1/2)*height*base;
/* mathematical formula*/

cout<<"Area if triangle is"<<ans;
} 

/*
Output:
Enter height and base 4                                                             
6                                                                                  
Area if triangle is 12
*/





Download this app for more programs and tutorials
https://play.google.com/store/apps/details?id=com.codetoinvent.malik.cplusplus
pointer to class

#include <iostream>

using namespace std;

class Cube
{
public:
// Constructor definition
Cube(double l=2.0, double b=2.0, double h=2.0)
{
cout <<"Constructor called." << endl;
length = l;
breadth = b;
height = h;
}
double Volume()
{
return length * breadth * height;
}
private:
double length; // Length of a Cube
double breadth; // Breadth of a Cube
double height; // Height of a Cube
};

int main(void)
{
Cube C1(2.5, 3.0, 1.8); // Declare C1
Cube C2(4.0, 1.5, 2.4); // Declare C2
Cube *ptrC; // Declare pointer to a class.

// Save the address of first object
ptrC = &C1;

// Now try to access a member using member access operator
cout << "Volume of Cube 1: " << ptrC->Volume() << endl;

// Save the address of first object
ptrC = &C2;

// Now try to access a member using member access operator
cout << "Volume of Cube 2: " << ptrC->Volume() << endl;

return 0;
}


Output:

Constructor called.
Constructor called.
Volume of Cube 1: 13.5
Volume of Cube 2: 14.4

Download this app for more programs and tutorials
https://play.google.com/store/apps/details?id=com.codetoinvent.malik.cplusplus
null pointer

#include <iostream>

using namespace std;

int main ()
{
int *ptr = NULL;

cout << "The value of ptr is " << ptr ;

return 0;
}


Output:

The value of ptr is 0

Download this app for more programs and tutorials
https://play.google.com/store/apps/details?id=com.codetoinvent.malik.cplusplus
min number using macro

#include <iostream>
using namespace std;

#define MIN(a,b) (((a)<(b)) ? a : b)

int main ()
{
int x, y;
x = 40;
y = 15;
cout <<"The Minimum number is " << MIN(x, y) << endl;

return 0;
}


Output:

The Minimum number is 15

Download this app for more programs and tutorials
https://play.google.com/store/apps/details?id=com.codetoinvent.malik.cplusplus
leap year

#include <iostream>
using namespace std;
int main()
{
int year;

cout<<"Enter a year to check if it is a leap year\n";
cin>>year;

if ( year%400 == 0)
cout<<year<<"is a leap year.\n";
else if ( year%100 == 0)
cout<<year<<"is not a leap year.\n";
else if ( year%4 == 0 )
cout<<year<<"is a leap year.\n";
else
cout<<year<<"is not a leap year.\n";

return 0;
}


Output:

Enter a year to check if it is a leap year                                         
2019                                                                               
2019is not a leap year.

Download this app for more programs and tutorials
https://play.google.com/store/apps/details?id=com.codetoinvent.malik.cplusplus
this pointer

#include <iostream>

using namespace std;

class Cube
{
public:
// Constructor definition
Cube(double l=5.0, double b=5.0, double h=5.0)
{
cout <<"Constructor called." << endl;
length = l;
breadth = b;
height = h;
// Increase every time object is created
objectCount++;
}
double Volume()
{
return length * breadth * height;
}
int compare(Cube C)
{
return this->Volume() > C.Volume();
}
private:
double length; // Length of a Cube
double breadth; // Breadth of a Cube
double height; // Height of a Cube
};

int main(void)
{
Cube C1(2.0, 1.2, 1.8); // Declare C1
Cube C2(3.5, 2.5, 1.9); // Declare C2

if(C1.compare(C2))
{
cout << "Cube 2 is smaller than Cube 1" <<endl;
}
else
{
cout << "Cube 2 is equal to or larger than Cube 1" <<endl;
}
return 0;
}


Output:

Constructor called.
Constructor called.
Cube 2 is equal to or larger than Cube 1

Download this app for more programs and tutorials
https://play.google.com/store/apps/details?id=com.codetoinvent.malik.cplusplus
swapping two numbers

#include <iostream>
using namespace std;
int main()
{
int x, y, temp;

cout<<"Enter the value of x and y\n";
cin>>x>>y;

cout<<"Before Swapping\nx =" <<x<<"\ny = "<<y<<"\n";

temp = x;
x = y;
y = temp;
/*using temp to swap
storing x to temp and y to x then moving temp to y*/

cout<<"After Swapping\nx = "<<x<<"\ny = "<<y<<"\n";

return 0;
}


Output:

Enter the value of x and y                                                         
4 6                                                                                
Before Swapping                                                                    
x =4                                                                               
y = 6                                                                              
After Swapping                                                                     
x = 6                                                                              
y = 4 

Download this app for more programs and tutorials
https://play.google.com/store/apps/details?id=com.codetoinvent.malik.cplusplus
swap 2 num without 3rd variable

#include <iostream>
using namespace std;
int main()
{
int a, b;
cout<<"\nEnter value for num1 & num2 :";
cin>>a>>b;

a = a + b;
b = a - b;
a = a - b;

cout<<"\nAfter swapping value of a :"<<a;
cout<<"\nAfter swapping value of b :"<<b;
return (0);
}


Output:

Enter value for num1 & num2 :5 7                                                   
                                                                                   
After swapping value of a :7                                                       
After swapping value of b :5

Download this app for more programs and tutorials
https://play.google.com/store/apps/details?id=com.codetoinvent.malik.cplusplus
simple interest

#include <iostream>
using namespace std;
int main()
{
int amount, rate, time, ans;

cout<<"\nEnter Principal Amount :";
cin>>amount;

cout<<"\nEnter Rate of Interest :";
cin>>rate;

cout<<"\nEnter Period of Time :";
cin>>time;

ans = (amount * rate * time)/100;
/Simple interest formula/
cout<<"\nSimple Interest :"<<ans;
}


Output:

Enter Principal Amount :1000                                                       
                                                                                   
Enter Rate of Interest :10                                                         
                                                                                   
Enter Period of Time :3                                                            
                                                                                   
Simple Interest :300

Download this app for more programs and tutorials
https://play.google.com/store/apps/details?id=com.codetoinvent.malik.cplusplus
remove space

#include <iostream>
using namespace std;
int main()
{
char text[100], blank[100];
int c = 0, d = 0;

cout<<"Enter some text\n";
gets(text);

while (text[c] != '\0')
{
/if two consecutive spaces found then it will not be added to new string/
if (!(text[c] == ' ' && text[c+1] == ' ')) {
blank[d] = text[c];
d++;
}
c++;
}

blank[d] = '\0';

cout<<"Text after removing blanks\n"<<blank<<"\n";

return 0;
}


Output:

Enter some text                                                                    
hello_  codetoinvent                                                               
Text after removing blanks                                                         
hello_ codetoinvent 

Download this app for more programs and tutorials
https://play.google.com/store/apps/details?id=com.codetoinvent.malik.cplusplus
reverse number

#include <iostream>
using namespace std;
int main()
{
int n, reverse = 0;

cout<<"Enter a number to reverse\n";
cin>>n;

while (n != 0)
{
reverse = reverse * 10;
reverse = reverse + n%10;
n = n/10;
}
/*taking unit place digit of no and moving to reverse
Dividing the no to discard unit place digit*/

cout<<"Reverse of entered number is ="<<reverse<<"\n";

return 0;
}


Output:

Enter a number to reverse
123
Reverse of entered number is = 321

Download this app for more programs and tutorials
https://play.google.com/store/apps/details?id=com.codetoinvent.malik.cplusplus
reference as return value

#include <iostream>
#include <ctime>

using namespace std;

int arr[] = {10,20,30,40,50};

int& setValues( int i )
{
return arr[i]; // return a reference
}

int main ()
{

cout << "Before changing values " << endl;
for ( int i = 0; i < 5; i++ )
{
cout << "arr[" << i << "] = ";
cout << arr[i] << endl;
}

setValues(1) = 60; // change 2nd element
setValues(3) = 70; // change 4th element

cout << "After changing values " << endl;
for ( int i = 0; i < 5; i++ )
{
cout << "arr[" << i << "] = ";
cout << arr[i] << endl;
}
return 0;
}


Output:

Before changing values
arr[0] = 10
arr[1] = 20
arr[2] = 30
arr[3] = 40
arr[4] = 50
After changing values
arr[0] = 10
arr[1] = 60
arr[2] = 30
arr[3] = 70
arr[4] = 50

Download this app for more programs and tutorials
https://play.google.com/store/apps/details?id=com.codetoinvent.malik.cplusplus
date and time

#include <iostream>
#include <ctime>

using namespace std;

int main( )
{
// current date/time based on current system
time_t now = time(0);

// convert now to string form
char* dt = ctime(&now);

cout << "The local date and time is: " << dt << endl;

// convert now to tm struct for UTC
tm *gmtm = gmtime(&now);
dt = asctime(gmtm);
cout << "The UTC date and time is:"<< dt << endl;
}


Output:

The local date and time is: Thu Jan 17 16:38:02 2019
The UTC date and time is: Thu Jan 17 11:08:02 2019










